Characterizing metastable states with the help of machine learning
Pietro Novelli∗†1, Luigi Bonati∗‡2, Massimiliano Pontil1, and Michele Parrinello§2
1Computational Statistics and Machine Learning, Italian Institute of Technology, Via Enrico Melen 83, 16142 Genoa, Italy 2Atomistic Simulations, Italian Institute of Technology, Via Enrico Melen 83, 16142 Genoa, Italy
Abstract
Present-day atomistic simulations generate long trajectories of ever more complex systems. Analyzing these data, discovering metastable states, and uncovering their nature is becoming increasingly challenging. In this paper, we first use the variational approach to conformation dynamics to discover the slowest dynamical modes of the simulations. This allows the different metastable states of the system to be located and organized hierarchically. The physical descriptors that characterize metastable states are discovered by means of a machine learning method. We show in the cases of two proteins, Chignolin and Bovine Pancreatic Trypsin Inhibitor, how such analysis can be effortlessly performed in a matter of seconds. Another strength of our approach is that it can be applied to the analysis of both unbiased and biased simulations.
1 Introduction
Atomistic simulations are one of the pillars of modern science. Their impact is felt in areas as diverse as chemistry, material science and biology [1]. The fortune of such simulations have also been helped by the great progress made in the last few decades both in algorithms and hardware. This has allowed increasingly more complex systems to be simulated and longer time scales to be explored. Nowadays, simulations are able to generate a large amount of data and their analysis is becoming more and more challenging. In fact, the analysis of simulation trajectories is a labor intensive endeavor that can take more time than the simulation itself. The purpose of this paper is to cut down the time
∗P.N. and L.B. contributed equally to this work. †pietro.novelli@iit.it ‡luigi.bonati@iit.it §michele.parrinello@iit.it
that researchers spend on this tedious, lengthy and at time frustrating analysis.
What we have in mind is the scenario encountered in many molecular simulations. While the configurational space of a physical system is enormously large, in most cases only a tiny fraction is visited with an appreciable probability. This often leads to a multimodal Boltzmann distribution which reflects the presence of long-lived metastable states. Examples are the initial and final state of a chemical process, the folded and unfolded state of a protein, or the liquid and solid phase of a material. Transitions between those states are rare and occur on a time scale longer than the other characteristic times of the system. Identifying such states and establishing their nature is of course of paramount importance. Several methods for identifying such states have been proposed in the literature, for instance using clustering techniques [2, 3] or constructing
1
arXiv:2204.07391v1 [physics.comp-ph] 15 Apr 2022


disconnectivity graphs [4]. When it comes to biomolecular simulations, Markov State Models [5] are often used, from which metastable states can be inferred by partitioning microstates [6–8]. Once such states are identified, various machine learning methods can be applied to extract relevant features [9–14].
In this work, we propose a data driven method that, starting from a simulation trajectory, be it biased or unbiased, is able to characterize the metastable states of a system in a physically transparent way. To this end, we combine two tools. One is the Variational Approach to Conformation dynamics (VAC) [15, 16]. This method allows identifying the slow modes of the system associated with the rare transitions between metastable states, and ranking them according to their lifetime. This is crucial since the physical notion of metastable states is intimately linked to their lifetime. We use this criterion to identify the states associated with the slowest transition timescales and label the configuration explored according to the states they belong to. The second tool we rely on is the Least Absolute Shrinkage and Selection Operator (LASSO) method [17] (see also [18, 19] and references therein), a well-known method in machine learning and statistics that performs variable selection via regularization so that both prediction accuracy and interpretability are reached simultaneously. Its role is to extract a handful of critical variables from a large set of physical descriptors.
We demonstrate the usefulness of this approach on two proteins, a variant of chignolin and the bovine pancreatic trypsin inhibitor (BPTI). In the first case, the data are generated in a biased run, while in the second they are the output of an unbiased 1 ms long trajectory. In both cases we are able to identify clearly their metastable states and describe them in a concise and physically transparent way. In order to present the results in a more illuminating way, we shall make use of the hierarchical structure of the protein free energy landscape and organize the results as a tree of states of decreasing stability in which states with longer time life are analyzed in terms of their shorter lived components.
2 Methods
Our method aims to distinguish between different metastable states with models that are physically transparent. To to this end, we shall employ one of the classical machine learning tools, the LASSO classifier. Our goal, however, is not merely classification but rather we wish to identify the physical quantities that most characterize the different states. Given an atomic configuration, LASSO takes as input a set physical descriptors (features) and outputs the label of the state the configuration belongs to. We then look for the smallest number of descriptors that still makes the classification accurate. This allows the nature of the different states to be more easily interpreted.
2.1 Choice of physical descriptors
Our source of data is the output of a molecular dynamics simulation, consisting of an atomic trajectory (Ri)N
i=1,
where i runs over the N time steps of the simulation. However, the Cartesian coordinates are not expressive enough to help the researcher to get an understanding of the states. Because of this, as a first step, we define and evaluate along the trajectory a set of physical descriptors and use them as inputs for the classifier. With an appropriate choice of descriptors the classification model correctly accounts for the physical symmetries of the system such as invariance to rotations and translations. We build descriptors out of invariant quantities like distances, angles and dihedral angles. These quantities can be used to construct more elaborate descriptors such as those characterizing bond breaking and forming, protein secondary structures or solvation. In practice, the number of input descriptors can be very large, of the order of tens of thousands or more. The LASSO algorithm constructs models that use only a handful of such descriptors while being able to distinguish accurately between metastable states. This selection will provide a precious hint toward a physical understanding of the metastable states.
2.2 Identifying metastable states
We now describe the second input needed by the classifier, which is a set of labels corresponding to the metastable state each configuration belongs to. To identify automatically the metastable states we use VAC [15, 16]. In this framework, it is possible to show that the eigenfunctions of the so-called transfer operator [20] encode the modes that relax more slowly toward equilibrium. To each mode there is also associated a time scale related to the corresponding eigenvalue. The eigenfunctions of the transfer operator can be estimated using the Time-lagged Independent Component Analysis (TICA) [15, 21] method and can be expressed either as a linear combination of input descriptors or as a nonlinear one using either kernel methods [22] or neural networks [23–25]. In the following, we shall use the DeepTICA method [25], which uses a neural network ansatz for the eigenfunctions and that can deal also with biased simulations. The slowest modes of the transfer operator are then used as an analysis tool, for instance to build Markov State Models [5, 15] or as collective variables s(R) in enhanced simulations [25–27]. Here we identify the metastable states starting from the Free Energy Surface (FES) associated with the slowest DeepTICA collective variables (CVs) s. The FES is defined as the logarithm of the marginal distribution of the selected CVs P (s):
F (s) = −β−1 ln P (s)
= −β−1 ln
[∫
dRe−βU(R)δ (s(R) − s)
] (1)
where U (R) is the potential energy, and β = (kBT )−1 the inverse temperature. In general the FES is a nonconvex function with multiple local minima. In a rare event
2


scenario these minima correspond to different metastable states and are separated by a high free energy barrier. Hence we identify the metastable states as the minima of the free energy surface projected on the slowest modes. To locate the metastable basins we use a Gaussian kernel density estimator to approximate the FES from simulation data. In the case of enhanced sampling simulations, the equilibrium probability distribution is recovered via a reweighting procedure [28]. We then identify the different basins of the FES and assign a label to each configuration based on the basin it belongs to. Finally, the LASSO classifier is optimized only over those configurations whose free energy difference with respect to the basin’s minimum is smaller than a preassigned value (typically 1-2 kBT ). In this way we ensure that the samples selected belong to a high-probability region of the phase space and are well separated from the other basins, so that mislabeling is avoided. Details about the algorithms used to construct the FES and identify the local minima are reported in the Supporting Information (Section S1).
2.3 Interpreting and distinguishing states
We now move to the core of the present work, i.e. the construction of a physically interpretable model. To this end we build a function which, given a configuration R, has in input Nd descriptors d1(R), . . . , dNd (R) values and returns in output the label of the metastable state the configuration belongs to, see Section 2.2. This is a standard supervised classification problem much discussed in the machine learning literature that can be solved in many ways [29]. For the sake of simplicity, we describe here only the case in which two metastable states are present, labeled here −1 and +1. The extension to the general case is simple and is discussed in the Supplementary Information (Appendix S2). The model is then optimized on the values that the Nd descriptors take along the MD trajectory. Since our scope is to promote interpretability we use a linear model:
f (R; w) =
Nd
∑
j=1
wjdj(R). (2)
With properly chosen values of the vector w = (w1, . . . , wNd ) the function f (R; w) will be positive or negative according to which label the input R configuration is assigned. Having a linear classifier is a first step toward interpretability. However, when one has to deal with thousands of descriptors this is not enough. Thus we enforce sparsity using LASSO. We separate the N = N− + N+ atomic configurations into the N− that belong to state −1 and the N+ that belong to state +1. The LASSO method searches for a model that minimizes the empirical error L, given by
L(w; λ) = 1
N
∑
α=±1
Nα
∑
iα =1
log
[
e−αfw(Riα ) + 1
]
+ λ ‖w‖1 .
(3)
where the index iα runs over the Nα configurations that belong to the α basin. The first term of the loss function is the standard logistic loss [29], needed to ensure that the model properly distinguishes the different states, the second enforces the sparsity of w, that is it favors only a handful of components of w to be different from zero. The value of λ can be chosen by evaluating the model classification accuracy on a separated validation set as a function of λ and selecting the highest value compatible with high classification accuracy. In order to make the choice of λ automatic we repeat the training with different values of λi, spaced evenly on a log scale, and use the criterion:
λ = arg min
λi
[(1 − A(λi)) ∗ 100 + nw(λi)] (4)
where A is the accuracy over the validation set and nw the number of non-zero coefficients at a given λi. This criterion implies that a new feature is included only if the corresponding increase in accuracy is greater than 1%.
2.4 Implementation
We have implemented the methods described above in a Python [30] package designed to be embedded effortlessly in existing MD workflows. The code guarantees maximum flexibility from the point of view of the input features, as the descriptors can be calculated either with functions provided or externally. This allows applying the method to a wide range of physical, biological and chemical problems. As the applications presented in this work are related to biological systems, and particularly proteins, we interfaced our code with the Python package mdtraj [31]. This allows us to easily calculate angles, dihedrals, relative distances and contacts, as well as more elaborate descriptors. This package, called stateinterpeter, is available at: https://github.com/luigibonati/md-stateinterpreter.
3 Applications
In this section, we test our method on two different realcase scenarios and explore the free energy landscape of two proteins. We choose to study two proteins since their relatively complex behavior offers an excellent testing ground for our methods. All the results we are about to present are obtained using the stateinterpeter package and can be easily reproduced.
3.1 Chignolin
We first study the peptide CLN025 (PDB ID 2RVD), which is a variant of the mini-protein chignolin. It is one of the smallest proteins that has a stable folded state. This protein has been extensively studied by brute force molecular dynamics simulations [32] and enhanced sampling techniques [25, 33]. Since long unbiased simulations are not always available we demonstrate that our method can be used to interpret the more easily obtainable biased simulations. Thus we analyze the trajectories generated in Ref. [25] in a
3


Figure 1: (top) Isolines of the free energy surface as a function of the slowest approximated eigenfunctions DeepTICA 1 and 2. Each minimum is labeled with the name of the metastable state. (center) Free energy projected along DeepTICA 1. (bottom) Free energy projected along DeepTICA 2, constructed using the data belonging to state 2 (identified from DeepTICA 1). In both the central and bottom plot the highlighted regions around the minima correspond to the windows in which the samples are selected for the classification.
two-step procedure that started from a multicanonical-type simulation. In Ref. [25], the slowest modes of this biased simulation were evaluated along with the corresponding FES. However, it took time and effort to arrive at a physical understanding of the four different states thus found. We shall show instead that the tools developed here allow repeating the analysis of Ref. [25] in a matter of seconds in an automatic and effortless way. In addition, our analysis reveals that in the Chignolin case and even more clearly in the following example of BPTI that the free energy has a hierarchical structure in which slow modes can be decomposed into faster ones. The hierarchical structure of the eigenfunctions of the transfer operator becomes apparent if we look at the free energy surface computed as a function of the two leading functions, see Fig. 1. The first one, DeepTICA 1 is associated with the slowest transition between states 1 and
2, while the latter describes the transformation between shorter-lived metastable states nested inside state 2. To make use of this hierarchical structure, we start by projecting the free energy along the approximated eigenfunction DeepTICA 1 and characterizing the two states thus identified. In our analysis we first use as descriptors the contact functions between all the 318 donor-acceptor pairs in the protein that can form a hydrogen bond. These are defined as
φ(r) = 1 + (r/r0)6
1 + (r/r0)12 . (5)
Here, r is the donor-acceptor distance and r0 = 3.5 ̊A is the typical distance between two heavy atoms involved in a H-bond. Hence, Eq. (5) reports on whether an H-bond is formed. In the following, we primarily discuss the descriptors selected by the sparse classifier and how they can help to characterize states. In the Supplementary Information (SI) we illustrate the behavior of the models in terms of accuracy and complexity as the regularization parameter changes (Fig. S1) and the histograms of the selected descriptors in different states (Fig. S2). Out of 318 possible acceptor-donor contacts, the sparse estimator (Eq. (3)) finds that a single contact is sufficient to distinguish between the states. They are indeed the unfolded (1) and folded (2) state, as can be easily determined also by a visual inspection of the trajectory. This is hardly surprising since in this system the slowest mode is associated with the folding-unfolding transition. Nevertheless, this is a physically transparent result since the bond between the terminal residues closes the β hairpin structure of the folded state and thus it is able to distinguish clearly between them (Fig. 2). However, on the shorter time scale of the second TICA eigenvalue, state 2 (which corresponds to a set of folded states) reveals a finer structure. This can be seen by selecting only the configurations that belong to state 2 and projecting them on DeepTICA2 (see Fig. 1). To deal with the case of more than two states of course one can resort to a multi-class classifier, e.g. composed by N binary classifiers, each discriminating a given state from all the others (Section S2). However, we find closer to our idea of interpretation discriminating two states at the time rather than comparing all the states together. For this reason we decided to inspect the differences between the most stable state (2.1) and the others. As can be seen in the lower panel of Fig. 2, the relevant features are connected to the sidechains of THR6 and THR8 (see also Table 1 and Fig. S2)). Notably, the most stable state is characterized by the bonding between these two sidechains. This result is coherent with our previous analysis [25] and in line with the finding that the interaction between THR6 and THR8 plays a crucial role in the stabilization of the folded state of chignolin [35]. This result highlights the importance of being able to investigate a large set of descriptors, including also the often neglected sidechains, which in this case play a relevant role.
4


DeepTICA 1
States Distances (99%) Dihedrals (99%)
1 vs 2 TYR1-O – TYR10-N ASP3-χ1
DeepTICA 2
States Distances (96%) Dihedrals (96%)
2.1 vs 2.2 THR6-Os – THR8-Os THR6-χ1
THR8-χ1
States Distances (100%) Dihedrals (100%)
2.1 vs 2.3 THR8-Os – TRP9-N THR8-χ1
Table 1: Descriptors selected by the LASSO estimator for the chignolin system. Each row contains the result of the classifiers for the states identified by a given DeepTICA CV, either using the H-bond contact functions or dihedral angles. The percentages in parenthesis indicate the classification accuracy. The “s” suffix in the H-bond contacts identifies side chain atoms.
_DeepTICA 1_
_DeepTICA 2_
12
2.1 2.2 2.3
Figure 2: Snapshots of the conformations of the proteins in each state, for the DeepTICA 1 (top) and DeepTICA 2 (bottom) variables. We also report the H-bonds selected by LASSO for each state. For DeepTICA 2 the features relevant to the two binary classifiers are displayed: in yellow the one related to state 2.1 vs 2.2 and in green the one associated with states 2.1 vs 2.3. Only the backbone of the protein is shown, but for the residues in which a feature of the sidechain is selected. The protein snapshots are obtained with the NGLview iPython widget [34].
It is instructive to repeat this analysis using a different set of descriptors. As an alternative to the H-bond descriptors, we use the dihedral angles related both to the conformational transformations of the backbone (Ramachandran angles φ and ψ) and to that of the sidechains (χ1 and χ2). To take properly into account the periodic nature of these variables we use as descriptors the sine and cosine of the angles, this leads to a total of 68 variables. The angle-based LASSO results, summarized in Table 1, are consistent with that based on the H-bonds, as the angles distinguishing the states are related to the residues that were identified as crucial in the H-bond-based analysis. The only apparent exception is the ASP3-χ1 angle that discriminates state 1 (unfolded) from 2 (folded). The fact that this side chain angle is selected might be surprising. However, one must not forget that the output of this analysis are the descriptors that discriminate the most, and do not provide any insight as to the why. In fact, ASP3-χ1 is selected because, in the folded state, it is rigidly locked at 180 degrees by the hydrogen bond formed between residue 3 and residue 8. It is therefore a byproduct of the folding/unfolding process. For this reason, if we do not know already which descriptors are the most suitable, it is best to characterize the same process with different sets of descriptors: doing so provides a concise representation from multiple perspectives that can aid understanding. Indeed, we recall that our purpose is exactly to help focusing on the physically interesting regions. Before leaving this section a few more comments are in order. One could have continued the analysis and resolved each of the 3 substates discussed earlier into shorter lived modes. However, since the barriers between modes are of the order of kBT , the exercise of identifying these fast modes would have become arbitrary and below the resolution of our analysis. We would also like to recall that we have started from data obtained in a multithermal sampling. Thus, what we analyze here are the slow modes of such simulation which, in principle, could differ from those of an unbiased one. However, as far as the modes described here are concerned we find the same results if we repeat the analysis on the unbiased data. Indeed, as reported in the
5


SI (Section S5) both the structure of the metastable states and the descriptors selected are practically the same.
3.2 BPTI
The second example studied is the 58-residue long BPTI protein (PDB ID 5PTI). The data that we base our analysis on come from a 1 ms long molecular dynamics simulation performed using the specialized ANTON [36] computer. In the original work, a complex clustering procedure based on autocorrelation functions and on the introduction of ad-hoc functions that measure the residues’ significance was used to identify and understand the different metastable states. Some analysis of the same run has been performed using the sparse TICA method [37]. Unfortunately, ANTON’s trajectory is not long enough to observe the unfolding transition and even within the set of folded states one state is visited only once. However, our approach is powerful enough to allow a detailed analysis of the different metastable states and their hierarchical structure even in the presence of an imperfect sampling. Following the workflow described in Section 2, we first apply Deep-TICA to the ANTON’s trajectory and identify the slowest dynamical modes. We use as descriptors the 10271 distances between all the pairs of O and N atoms that can form hydrogen bonds. A fully connected neural network parameterized by four layers and [1024,256,64,3] nodes per layer is used to express the three slowest eigenfunctions of the transfer operator, using a lag-time equal to 1 μs. To take full advantage of the hierarchical structure we proceed as in the chignolin example. That is, we look at the FES projected along the eigenfunctions ordered according to the time scales of the transitions. The data in the different minima of the longer-lived metastable states are projected into the faster TICA eigenfunctions. This allows us to organize the states hierarchically (see Fig. 3) according to their lifetime. From the LASSO point of view, this helps us query the data in a more structured manner, and focus our attention on the states that more usefully need to be compared. On the time scale of the largest Deep-TICA eigenvalue, the eigenfunction DeepTICA 1 distinguishes between state 1 and a second state 2. Since a transition to state 1 has been seen only once along the trajectory (Fig. 4a), it is not surprising that DeepTICA 1 identifies the transition to and from state 1 as a slow mode. Of course, the difference in free energy between state 1 and state 2 is not to be trusted due to insufficient sampling. However, this fact has no consequence on the analysis that follows, since we use only configurations close to the minima. When projected on DeepTICA 2, state 2 as identified by DeepTICA 1 decomposes into two faster modes 2.1 and 2.2. Mode 2.2 is the conformation closest to the crystallographic one, as measured by the RMSD (Fig.4), but it is not the most stable structure for this force-field. Continuing the analysis and using DeepTICA 3, state 2.1 can be further decomposed into two states 2.1.1 and 2.1.2. However here we are at the limits of the resolution of our method and
these two states are not very stable, as the free energy barrier in going back to the one with the lowest free energy (2.1.2) is rather small. It is already interesting to note that our identification of the metastable states agrees with the clustering analysis performed in Ref. [36], as easily checked by comparing their results with our Fig. 4.
As in the previous example, we compare the performances of two sets of descriptors: the contact functions between possible H-bonded pairs and the dihedral angles φ, ψ, χ1 and χ2, to find out which set discriminates best the states. Out of the 10271 possible H-bonded pairs, we use as descriptors only those that have at least once formed an Hbond, as measured by the contact function in Eq. (5) being greater than 0.5. This leads to the selection of 927 descriptors. When we use the angular variables, given the fact that we use the sine and cosine of the dihedrals we end up with a total of 392 descriptors.
The results for these two LASSO analyses are shown in Table 2. Both analysis achieve very high accuracy and identify as relevant the same residues. In particular, for the DeepTICA 1 related transition (state 1 vs 2) we find that the residue ARG42 plays an important role. To discriminate between the states associated with DeepTICA 2 (2.1 and 2.2) LASSO outputs a few contacts between residues 1415-16 and 35-36-38, while for the dihedrals the ψ angle of LYS15. Finally, for the states associated with DeepTICA 3 (2.1.1 vs 2.1.2), the important descriptors are in both cases associated with the residue PRO13. This allow us to look at the protein by focusing our view on the most affected regions, as shown Fig. 3.
Regarding state 1, it is interesting to note that the φ angle of the ARG42 residue is the same variable found by applying the sparse TICA method in Ref. [37]. This angle flips when the system makes a transition to state 1, although in Ref. [37] it was already noted that this is actually a byproduct of a large-scale structural change involving the opening of the protein core. Indeed, if we visualize the relevant residues in a snapshot of state 1 compared to the crystal structure (Fig. S5) we observe that these residues experience significant changes leading to the opening of the upper region of protein. This is not surprising, since our approach, just like the one used in Ref. [37]), looks for the best linear combination of input features capable of performing the task, which here is to distinguish between states. One could repeat the analysis by employing different set of descriptors which are capable of measuring different physical properties. In the SI we report such analysis using as descriptors the contributions of each residue to the solvent accessible surface area (SASA). In this way, we find that the residues ARG39 and LYS41 undergo a significant change in their SASA contributions (see Fig. S4). Remarkably, not only these residues are very close spatially to the ones selected by the previous analysis, but also in Ref. [36] the same ARG39, LYS41 were identified among the residues most characterizing this state.
6


Figure 3: (left) Hierarchical presentation of the free energy surfaces projected along with the slowest DeepTICA CVs. The free energy profiles associated with the eigenfunctions faster than DeepTICA 1 have been constructed using a slice of the data taken from the basins of the previous CV. Only the projections that have more than 1 state are shown. (right) Snapshots of BPTI in which the relevant H-bond contacts selected by LASSO are reported. The circle, colored according to the state, focuses the attention on the region containing the relevant features.
7


DeepTICA 1
States H-bond contacts (99%) Dihedrals (99%)
1 vs 2 ARG42-N – ASN43-N φ ARG42
DeepTICA 2
States H-bond contacts (98%) Dihedrals (96%)
2.1 vs 2.2
TYR35-Os – CYS38-N
ψ LYS15
CYS14-N – GLY36-O
LYS15-N – ALA16-N
ALA16-N – GLY36-O
DeepTICA 3
States H-bond contacts (97%) Dihedrals (98%)
2.1.1 vs 2.1.2 PRO13-N – CYS14-N ψ PRO13
Table 2: Descriptors selected by the LASSO estimator for the BPTI system. Each row contains the result of the classifiers for the states identified by a given DeepTICA CV, either using the H-bond contact functions or dihedral angles. The percentages in parenthesis indicate the classification accuracy. The “s” suffix in the H-bond contacts identifies side chain atoms.
Figure 4: Alpha-carbon root-mean-square-deviation with respect to the crystal structure of BPTI. The same data is displayed in all three plots, but each time it is colored according to the states identified by the corresponding DeepTICA CV. Points colored in grey with high transparency belong to other basins of the hierarchical landscape.
4 Conclusions
In this work, we presented a machine learning-based method to gain physical insights into the properties of metastable states of complex systems. LASSO, the machine learning algorithm at the core of our method, is highly scalable and rests on solid theoretical properties [18, 19]. Another pillar of our approach is an automated procedure that identifies metastable states from the free energy basins of longer lived slow modes coordinates. To characterize such states we make use of a class of easily interpretable models that return an accurate description of the system in terms of a small number of physical quantities. Using sets of descriptors that are sensitive to different physical properties, the nature of the metastable states can be assessed from multiple perspectives. This workflow is naturally apt to interpret the results of both biased and unbiased simulations. Although the examples given here are protein-related, this workflow is very general, and we believe it can be useful for analyzing very different simulations, from chemical reactions to material science problems.
Acknowledgements
We thank D. E. Shaw Research for sharing their BPTI trajectory. L.B. thanks Dr. Narjes Ansari for useful discussions and for guidance in the analysis of BPTI simulation. P.N. was in part supported by the ELISE grant (GA no. 951847).
8


References
[1] D. Frenkel and B. Smit. Understanding Molecular Simulation. Elsevier, 2002.
[2] H.-W. Chang, S. Bacallado, S. S. Pande, and V. S. Carlsson. “Persistent Topology and Metastable State in Conformational Dynamics”. PLoS ONE 8 (2013).
[3] F. Sittel and G. Stock. “Robust Density-Based Clustering To Identify Metastable Conformational States of Proteins”. Journal of Chemical Theory and Computation 12 (2016).
[4] S. V. Krivov and M. Karplus. “Free energy disconnectivity graphs: Application to peptide models”. The Journal of Chemical Physics 117 (2002).
[5] G. R. Bowman, V. S. Pande, and F. No ́e, eds. An Introduction to Markov State Models and Their Application to Long Timescale Molecular Simulation. Vol. 797. Dordrecht: Springer, 2014.
[6] P. Deuflhard, W. Huisinga, A. Fischer, and C. Sch ̈utte. “Identification of almost invariant aggregates in reversible nearly uncoupled Markov chains”. Linear Algebra and Its Applications 315 (2000).
[7] F. No ́e, I. Horenko, C. Sch ̈utte, and J. C. Smith. “Hierarchical analysis of conformational dynamics in biomolecules: Transition networks of metastable states”. The Journal of Chemical Physics 126 (2007).
[8] L. Martini et al. “Variational Identification of Markovian Transition States”. Physical Review X 7 (2017).
[9] M. M. Sultan, G. Kiss, D. Shukla, and V. S. Pande. “Automatic Selection of Order Parameters in the Analysis of Large Scale Molecular Dynamics Simulations”. J. Chem. Theory Comput 10 (2014).
[10] S. Brandt, F. Sittel, M. Ernst, and G. Stock. “Machine Learning of Biomolecular Reaction Coordinates”. Journal of Physical Chemistry Letters 9 (2018).
[11] O. Fleetwood, M. A. Kasimova, A. M. Westerlund, and L. Delemotte. “Molecular Insights from Conformational Ensembles via Machine Learning”. Biophysical Journal 118 (2020).
[12] P. Ravindra, Z. Smith, and P. Tiwary. “Automatic mutual information noise omission ( AMINO ): generating order parameters for molecular systems”. Molecular Systems Design & Engineering 5 (2019).
[13] L. Bonati, V. Rizzi, and M. Parrinello. “Data-Driven Collective Variables for Enhanced Sampling”. Journal of Physical Chemistry Letters 11 (2020).
[14] R. K. Cersonsky, B. A. Helfrecht, E. A. Engel, S. Kliavinek, and M. Ceriotti. “Improving sample and feature selection with principal covariates regression”. Machine Learning: Science and Technology 2 (2021).
[15] G. Pe ́rez-Herna ́ndez, F. Paul, T. Giorgino, G. De Fabritiis, and F. Noe ́. “Identification of slow molecular order parameters for Markov model construction”. Journal of Chemical Physics 139 (2013).
[16] F. Noe ́ and C. Clementi. “Collective variables for the study of long-time kinetics from molecular trajectories: theory and methods”. Current Opinion in Structural Biology 43 (2017).
[17] R. Tibshirani. “Regression Shrinkage and Selection Via the Lasso”. Journal of the Royal Statistical Society: Series B (Methodological) 58 (1996).
[18] T. Hastie, R. Tibshirani, and M. Wainwright. Statistical Learning with Sparsity. Chapman and Hall/CRC, 2015.
[19] P. B ̈uhlmann and S. van de Geer. Statistics for High-Dimensional Data. Springer Series in Statistics. Berlin, Heidelberg: Springer Berlin Heidelberg, 2011.
[20] J. H. Prinz et al. “Markov models of molecular kinetics: Generation and validation”. Journal of Chemical Physics 134 (2011).
[21] C. R. Schwantes and V. S. Pande. “Improvements in Markov State Model construction reveal many nonnative interactions in the folding of NTL9”. Journal of Chemical Theory and Computation 9 (2013).
[22] C. R. Schwantes and V. S. Pande. “Modeling molecular kinetics with tICA and the kernel trick”. Journal of Chemical Theory and Computation 11 (2015).
[23] A. Mardt, L. Pasquali, H. Wu, and F. No ́e. “VAMPnets for deep learning of molecular kinetics”. Nature Communications 9 (2018).
[24] W. Chen, H. Sidky, and A. L. Ferguson. “Nonlinear discovery of slow molecular modes using state-free reversible VAMPnets”. Journal of Chemical Physics 150 (2019).
[25] L. Bonati, G. Piccini, and M. Parrinello. “Deep learning the slow modes for rare events sampling”. Proceedings of the National Academy of Sciences 118 (2021).
[26] J. McCarty and M. Parrinello. “A variational conformational dynamics approach to the selection of collective variables in metadynamics”. The Journal of Chemical Physics 147 (2017).
[27] M. M. Sultan and V. S. Pande. “TICAMetadynamics: Accelerating Metadynamics by Using Kinetically Selected Collective Variables”. Journal of Chemical Theory and Computation 13 (2017).
[28] O. Valsson, P. Tiwary, and M. Parrinello. “Enhancing Important Fluctuations: Rare Events and Metadynamics from a Conceptual Viewpoint”. Annual Review of Physical Chemistry 67 (2016).
[29] S. Shalev-Shwartz and S. Ben-David. Understanding Machine Learning. Cambridge: Cambridge University Press, 2014.
[30] G. Van Rossum and F. L. Drake. Python 3 Reference Manual. Scotts Valley, CA: CreateSpace, 2009.
9


[31] R. T. McGibbon et al. “MDTraj: A Modern Open Library for the Analysis of Molecular Dynamics Trajectories”. Biophysical Journal 109 (2015).
[32] K. Lindorff-Larsen, S. Piana, R. O. Dror, and D. E. Shaw. “How fast-folding proteins fold”. Science 334 (2011).
[33] P. Shaffer, O. Valsson, and M. Parrinello. “Enhanced, targeted sampling of high-dimensional free-energy landscapes using variationally enhanced sampling, with an application to chignolin”. Proceedings of the National Academy of Sciences 113 (2016).
[34] H. Nguyen, D. A. Case, and A. S. Rose. “NGLview–interactive molecular graphics for Jupyter notebooks”. Bioinformatics 34 (2018).
[35] Y. Maruyama and A. Mitsutake. “Analysis of Structural Stability of Chignolin”. Journal of Physical Chemistry B 122 (2018).
[36] D. E. Shaw et al. “Atomic-level characterization of the structural dynamics of proteins”. Science 330 (2010).
[37] R. T. McGibbon, B. E. Husic, and V. S. Pande. “Identification of simple reaction coordinates from complex dynamics”. Journal of Chemical Physics 146 (2017).
[38] D. W. Scott. Multivariate density estimation theory, practice, and visualization. New York: J. Wiley, 1992.
[39] J. Nocedal and S. Wright. Numerical Optimization. 2nd ed. Springer New York, 2006.
[40] D. J. Wales and J. P. K. Doye. “Global Optimization by Basin-Hopping and the Lowest Energy Structures of Lennard-Jones Clusters Containing up to 110 Atoms”. The Journal of Physical Chemistry A 101 (1997).
[41] A. Shrake and J. Rupley. “Environment and exposure to solvent of protein atoms. Lysozyme and insulin”. Journal of Molecular Biology 79 (1973).
10


SUPPORTING INFORMATION
S1 Identifying local minima of the
free energy surface
To identify the metastable basins we approximate the free energy surface with a standard Gaussian kernel density estimator [38]. Next, we seek the local minima of the approximated FES. Every local minima will identify a basin and hence a metastable state. The identification of the local minima of the approximated FES is performed by standard descent algorithms. Descent algorithms are iterative methods which require an initial point to start the iterations, and converge to a near local minimum. We use a basic strategy to retrieve local minima. We initialize multiple BFGS solvers [39] at different initial points, and we let them converge. Finally we recover the set of unique local minima found. The initial points can be selected either by a grid or random sampling of the region of interest. A grid sampling is very accurate, but the number of points grows exponentially fast with the dimension of the CVs space. For the random sampling case, a predefined number of points is sampled from the region of interest according to a given probability distribution (e.g. uniform). Our empirical tests shows that for the problems analyzed, both initialization schemes works very well. If physically not relevant shallow local minima are present in the FES one can exclude them annealing the iterations of the descent algorithm by adding noise [40]. Once the local minima have been found, we partition the CV space with a Voronoi tesselation centered at the local minima. With the CV space partitioned as such, labeling a configuration requires only to identify in which of the Voronoi polyhedrons it belongs. If we are only interested in a single CV, a simpler approach is possible. By spltiting the 1D domain of the FES in segments whose extrema correspond to local maxima of the FES, we obtain a partitioning of the (1D) CV space in which each segment contains a single metastable basin of the FES.
S2 Interpreting three or more
metastable states
In this section we describe how the techniques presented in Section 2.3 can be extended to give a joint interpretation on a number Ns > 2 of metastable states. In this case, we adopt the “one-versus-rest” scheme to distinguish the states. Within this scheme, Ns disjoint problems of the form of Eq. (3) are solved. In the i-th problem we split the configurations into the N+1 belonging to the state i and the N−1 not belonging to i. In this way, the solutions w1, . . . , wNs are associated with the models f (R; wi) whose sign is positive when we can identify the configuration R with the state i and negative otherwise. The “oneversus-rest” scheme was specifically selected as it preservers the overall intepretability of the results. Indeed, the descrip
tors selected in the “one-versus-rest” scheme for the i-th model are the ones needed to distinguish a configuration in the i-th state from any other state. More advanced classification methods such as the ones based on the cross-entropy loss do not retain this easy interpretation of the results.
S3 Numerical details
For the KDE approximation of the FES we have used a bandwidth σ = 0.075 in the chignolin example presented in Sec. 3.1 and σ = 0.1 for the BPTI example in Sec. 3.2. In both cases, the collective variables were rescaled to fit in the interval [−1, 1]. The training of the LASSO model was performed with 10000 sample configurations for each metastable state.
S4 Chignolin, supplementary results
Fig. S1 reports the plots of the accuracy and complexity (number of features) for the LASSO classifier as a function of the regularization strength. In fig S2 we plot the histograms of the descriptors selected by LASSO for the different states, to highlight the formation/breaking of the associated hydrogen bonds.
S5 Chignolin, analysis on unbiased
data
Here we repeat the analysis on the Chignolin protein, this time using the data from the molecular dynamics simulation of ref. [32] rather than from the biased simulation of ref. [25]. The DeepTICA CVs are extracted using a descriptors set composed of all the contacts functions between atoms that can form H-bonds, filtered to keep only the ones that have formed a contact at least in one trajectory snapshot. This gives us 318 input descriptors. Then a neural-network with [318,64,64,3] neurons per layer is used to approximate the eigenfunctions of the transfer operator, as in [25]. The lag-time used is 2 ns. Once we have extracted the new CVs, we can identify the metastable states and characterize them with LASSO. The free energy surfaces along the DeepTICA CVs are reported in Fig. S3. The structure of the metastable basins is very similar to the one obtained from the biased simulation (Fig. 1). In particular, DeepTICA 1 describes the transition between two states while DeepTICA 2 describes a faster transition between three states. Then we identify the most distinguishing features with LASSO, which are reported in Table S3. Remarkably, the H-bonds contacts selected are the same as Table 1. Also for the torsional angles-based analysis we find the same descriptors, but for the exchange of χ1 of THR6 and THR8 in the case of states 2.1 vs 2.3. As detailed in the main text, this agreement between the description of slow modes of biased and unbiased simulation was not a foregone conclusion. What is interesting is that with the approach presented in this paper we are
SI-1


Figure S1: Chignolin. Accuracy and number of features as a function of the magnitude of the LASSO regularization. The dotted vertical line represent the value selected by the criterion of Eq. 4.
Figure S2: Chignolin. Histograms of the the selected features (h-bond contacts) selected by the three classifiers. Colors denote state membership according to Fig. 1. Note that the histograms are normalized within each state.
SI-2


DeepTICA 1
States Distances (99%) Dihedrals (98%)
1 vs 2 TYR1-O – TYR10-N ASP3-χ1
DeepTICA 2
States Distances (97%) Dihedrals (100%)
2.1 vs 2.2 THR6-Os – THR8-Os THR6-χ1
THR8-χ1
States Distances (100%) Dihedrals (100%)
2.1 vs 2.3 THR8-Os – TRP9-N THR6-χ1
Table S3: Chignolin, unbiased simulation. Descriptors selected by the LASSO estimator for the chignolin system. Each row contains the result of the classifiers for the states identified by a given DeepTICA CV, either using the Hbond contact functions or dihedral angles. The percentages in parenthesis indicate the classification accuracy.
able to readily compare states identified by different ”cryptic” variables such as neural networks, and show that they identify transitions between the same states.
S6 BPTI, analysis with SASA de
scriptors
SASA contributions are calculated using the Shrake and Rupley algorithm [41] as implemented in mdtraj. In Fig. S4 we show the histograms of the selected residues, while in Fig. S5 we report a snapshot of the BPTI protein in state 1, compared with the crystallographic structure.
SI-3


Figure S3: Chignolin, unbiased. Hierarchical free energy surfaces as a function of the DeepTICA CVs extracted from the molecular dynamics simulation of ref. [32]. Colored regions denote the states identified For DeepTICA 2, only the points belonging to basin 2 are used to construct the FES.
Figure S4: Histograms of the SASA features selected by the LASSO classifier in contrasting states 1 and 2.
Figure S5: BPTI. Snapshots of state 1 (left) and crystal structure (right) to highlight the opening of the upper turns of the protein associated with state 1. The residues selected by the LASSO classifier with SASA contributions are highlighted in red and their atoms are displayed on top of the cartoon representation.
SI-4